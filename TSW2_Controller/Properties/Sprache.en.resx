<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alle Zuege gehen dabei verloren" xml:space="preserve">
    <value>All trains will be deleted!</value>
  </data>
  <data name="Als Wert für den Zeitfaktor kannst du nun" xml:space="preserve">
    <value>You can now set the time factor to </value>
  </data>
  <data name="Auf welcher Zahl bist du gelandet" xml:space="preserve">
    <value>What number did you land on?</value>
  </data>
  <data name="Bremse ist" xml:space="preserve">
    <value>Brake is</value>
  </data>
  <data name="Bremsindikator_Leer__Standard_Laden" xml:space="preserve">
    <value>Brake indicator empty! Load standard?</value>
  </data>
  <data name="Das Feld darf nicht leer sein" xml:space="preserve">
    <value>The text field cannot be empty</value>
  </data>
  <data name="Druecke nochmal auf OK wechsel innerhalb von 7 Sekunden zum TSW und warte" xml:space="preserve">
    <value>Press OK again, switch to TSW within 7 seconds and wait</value>
  </data>
  <data name="Du hast die neueste Version" xml:space="preserve">
    <value>You have the latest version</value>
  </data>
  <data name="Du_hast_noch_keinen_Startwert_eingetragen" xml:space="preserve">
    <value>You didn't enter any starting value!</value>
  </data>
  <data name="Einstellungen von" xml:space="preserve">
    <value>Transfer the data of </value>
  </data>
  <data name="Eintraege_geloescht" xml:space="preserve">
    <value> entries deleted!</value>
  </data>
  <data name="eintragen" xml:space="preserve">
    <value />
  </data>
  <data name="entfernen" xml:space="preserve">
    <value>"?</value>
  </data>
  <data name="Ersetzt" xml:space="preserve">
    <value>Replaced</value>
  </data>
  <data name="Erstellt" xml:space="preserve">
    <value>Added</value>
  </data>
  <data name="Fehler" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Fehler_beim_Textindikator" xml:space="preserve">
    <value>Error with text indicator!</value>
  </data>
  <data name="Fehler_bei_Aufloesung" xml:space="preserve">
    <value>Error with resolution!</value>
  </data>
  <data name="Fertig" xml:space="preserve">
    <value>Finished!</value>
  </data>
  <data name="Hinzugefuegt" xml:space="preserve">
    <value>Added</value>
  </data>
  <data name="Hmm da hast du wohl etwas falsch gemacht Die Startzahl sollte groeßer als die Endzahl sein" xml:space="preserve">
    <value>Hmm, you must have done something wrong. The starting number should be greater than the ending number.</value>
  </data>
  <data name="Hmm da hat etwas nicht funktioniert Versuche es doch nochmal" xml:space="preserve">
    <value>Hmm something didn't work. Try again.</value>
  </data>
  <data name="ist verfuegbar" xml:space="preserve">
    <value>is available</value>
  </data>
  <data name="ist verfuegbar Moechtest du aktualisieren" xml:space="preserve">
    <value> is available! Do you want to update?</value>
  </data>
  <data name="Kein Joystick angeschlossen" xml:space="preserve">
    <value>No joystick connected!</value>
  </data>
  <data name="Keine Nummer erkannt Kann es sein dass du beim Maximum gelandet bist" xml:space="preserve">
    <value>No number detected. Could it be that you have reached the maximum?</value>
  </data>
  <data name="Kombihebel_Bremsindikator_Leer__Standard_Laden" xml:space="preserve">
    <value>Master controller brake indicator empty! Load standard?</value>
  </data>
  <data name="Kombihebel_Schubindikator_Leer__Standard_Laden" xml:space="preserve">
    <value>Master controller throttle indicator empty! Load standard?</value>
  </data>
  <data name="lblT1_JoyName" xml:space="preserve">
    <value>Joyname</value>
  </data>
  <data name="lblT1_KnopfNr" xml:space="preserve">
    <value>Button no.</value>
  </data>
  <data name="loeschen" xml:space="preserve">
    <value>"?</value>
  </data>
  <data name="Moechtest_du" xml:space="preserve">
    <value>Do you want to remove "</value>
  </data>
  <data name="Nr" xml:space="preserve">
    <value>No:</value>
  </data>
  <data name="OK dann stelle den Regler nochmal auf" xml:space="preserve">
    <value>OK, than set the controller back to </value>
  </data>
  <data name="Schub ist" xml:space="preserve">
    <value>Thrust is</value>
  </data>
  <data name="Schubindikator_Leer__Standard_Laden" xml:space="preserve">
    <value>Throttle indicator empty! Load standard?</value>
  </data>
  <data name="SprachenName" xml:space="preserve">
    <value>Englisch</value>
  </data>
  <data name="Stelle den Regler nun auf den bremswert" xml:space="preserve">
    <value>Now set the controller to the braking value</value>
  </data>
  <data name="uebernehmen" xml:space="preserve">
    <value />
  </data>
  <data name="und bestaetige mit OK" xml:space="preserve">
    <value> and press OK</value>
  </data>
  <data name="und soll" xml:space="preserve">
    <value>and should be</value>
  </data>
  <data name="Wechsel_innerhalb_von_7_Sekunden_zum_TSW_und_warte" xml:space="preserve">
    <value>Switch to TSW within 7 seconds and wait</value>
  </data>
  <data name="Willst_du_wirklich" xml:space="preserve">
    <value>Do you really want to remove "</value>
  </data>
  <data name="Zugauswahl" xml:space="preserve">
    <value>_Select train</value>
  </data>
</root>